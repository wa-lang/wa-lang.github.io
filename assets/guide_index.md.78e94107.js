import{_ as s,c as a,o as n,a as l}from"./app.8b465437.js";const e="/logo-shadow.svg",p="/playground.gif",g=JSON.parse('{"title":"指南","description":"","frontmatter":{"title":"指南"},"headers":[{"level":2,"title":"设计目标","slug":"设计目标","link":"#设计目标","children":[]},{"level":2,"title":"Playground 在线预览","slug":"playground-在线预览","link":"#playground-在线预览","children":[]},{"level":2,"title":"本地安装和测试","slug":"本地安装和测试","link":"#本地安装和测试","children":[]},{"level":2,"title":"例子: 你好, 凹语言","slug":"例子-你好-凹语言","link":"#例子-你好-凹语言","children":[]},{"level":2,"title":"例子: 打印素数","slug":"例子-打印素数","link":"#例子-打印素数","children":[]},{"level":2,"title":"作为脚本执行","slug":"作为脚本执行","link":"#作为脚本执行","children":[]},{"level":2,"title":"版权","slug":"版权","link":"#版权","children":[]}],"relativePath":"guide/index.md"}'),o={name:"guide/index.md"},t=l('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-hidden="true">#</a></h1><p>凹语言™（凹读音“Wa”）是 <a href="https://github.com/chai2010" target="_blank" rel="noreferrer">柴树杉</a>、<a href="https://github.com/3dgen" target="_blank" rel="noreferrer">丁尔男</a>、<a href="https://github.com/benshi001" target="_blank" rel="noreferrer">史斌</a> 针对 WASM 平台设计的通用编程语言，同时支持 Linux、macOS 和 Windows 等主流操作系统和 Chrome 等浏览器环境，同时也支持作为独立Shell脚本和被嵌入脚本模式执行。</p><p><img src="'+e+'" alt=""></p><ul><li>主页：<a href="https://wa-lang.org" target="_blank" rel="noreferrer">https://wa-lang.org</a></li><li>代码仓库 (Gitee): <a href="https://gitee.com/wa-lang/wa" target="_blank" rel="noreferrer">https://gitee.com/wa-lang/wa</a></li><li>代码仓库 (Github): <a href="https://github.com/wa-lang/wa" target="_blank" rel="noreferrer">https://github.com/wa-lang/wa</a></li><li>开发工具 (Develop Tools): <a href="https://wa-lang.org/playground" target="_blank" rel="noreferrer">Playground</a>, <a href="https://marketplace.visualstudio.com/items?itemName=xxxDeveloper.vscode-wa" target="_blank" rel="noreferrer">VSCode 插件</a></li><li>开发组成员：<a href="https://github.com/chai2010" target="_blank" rel="noreferrer">柴树杉</a>、<a href="https://github.com/3dgen" target="_blank" rel="noreferrer">丁尔男</a>、<a href="https://github.com/benshi001" target="_blank" rel="noreferrer">史斌</a>、<a href="https://github.com/ohxxx" target="_blank" rel="noreferrer">扈梦明</a>、<a href="https://github.com/leaftree" target="_blank" rel="noreferrer">刘云峰</a>、<a href="https://github.com/ShiinaOrez" target="_blank" rel="noreferrer">宋汝阳</a></li></ul><h2 id="设计目标" tabindex="-1">设计目标 <a class="header-anchor" href="#设计目标" aria-hidden="true">#</a></h2><ul><li>披着 Go 语法外衣的 C 语言；</li><li>凹语言™源码文件后缀为 <code>.wa</code>；</li><li>凹语言™编译器兼容 WaGo 语法。WaGo 是 Go 真子集。使用 WaGo 语法的源码文件后缀为 <code>.wa.go</code>。凹语法与 WaGo 语法在 AST 层面一致；</li><li>凹语言™支持中文/英文双语关键字，即任一关键字均有中文及英文版，二者在语法层面等价。</li></ul><p>更多细节请参考 <a href="./goals.html">凹语言™项目目标</a></p><h2 id="playground-在线预览" tabindex="-1">Playground 在线预览 <a class="header-anchor" href="#playground-在线预览" aria-hidden="true">#</a></h2><p><a href="https://wa-lang.org/playground" target="_blank" rel="noreferrer">https://wa-lang.org/playground</a></p><p><img src="'+p+`" alt=""></p><h2 id="本地安装和测试" tabindex="-1">本地安装和测试 <a class="header-anchor" href="#本地安装和测试" aria-hidden="true">#</a></h2><ol><li><code>go install wa-lang.org/wa@latest</code></li><li><code>wa init -name=_examples/hi</code></li><li><code>wa run _examples/hi</code></li></ol><blockquote><p>项目尚处于原型开源阶段，如果有共建和PR需求请参考 <a href="/community/contribute.html">如何贡献代码</a>。</p></blockquote><h2 id="例子-你好-凹语言" tabindex="-1">例子: 你好, 凹语言 <a class="header-anchor" href="#例子-你好-凹语言" aria-hidden="true">#</a></h2><p>打印字符和调用函数：</p><div class="language-wa"><button title="Copy Code" class="copy"></button><span class="lang">wa</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> main {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">println</span><span style="color:#D8DEE9FF;">(</span><span style="color:#A3BE8C;">&quot;你好，凹语言！&quot;</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#88C0D0;">println</span><span style="color:#D8DEE9FF;">(</span><span style="color:#88C0D0;">add</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">40</span><span style="color:#D8DEE9FF;">, </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;">))</span></span>
<span class="line"><span style="color:#D8DEE9FF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">add</span><span style="color:#D8DEE9FF;">(a: </span><span style="color:#81A1C1;">i32</span><span style="color:#D8DEE9FF;">, b: </span><span style="color:#81A1C1;">i32</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">=&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">i32</span><span style="color:#D8DEE9FF;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> a</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;">b</span></span>
<span class="line"><span style="color:#D8DEE9FF;">}</span></span>
<span class="line"></span></code></pre></div><p>运行并输出结果:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#d8dee9ff;">$ wa run hello.wa </span></span>
<span class="line"><span style="color:#d8dee9ff;">你好，凹语言！</span></span>
<span class="line"><span style="color:#d8dee9ff;">42</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre></div><h2 id="例子-打印素数" tabindex="-1">例子: 打印素数 <a class="header-anchor" href="#例子-打印素数" aria-hidden="true">#</a></h2><p>打印 30 以内的素数：</p><div class="language-wa"><button title="Copy Code" class="copy"></button><span class="lang">wa</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#616E88;"># 版权 @2021 凹语言™ 作者。保留所有权利。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#D8DEE9FF;">() {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">:=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;">; n </span><span style="color:#81A1C1;">&lt;=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">30</span><span style="color:#D8DEE9FF;">; n </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9FF;"> isPrime: </span><span style="color:#81A1C1;">i32</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">:=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;">; i</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">i </span><span style="color:#81A1C1;">&lt;=</span><span style="color:#D8DEE9FF;"> n; i </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> i </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">:=</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">%</span><span style="color:#D8DEE9FF;"> i; x </span><span style="color:#81A1C1;">==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">				isPrime </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		</span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> isPrime </span><span style="color:#81A1C1;">!=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">			</span><span style="color:#88C0D0;">println</span><span style="color:#D8DEE9FF;">(n)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">		}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">}</span></span>
<span class="line"></span></code></pre></div><p>运行并输出结果:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#d8dee9ff;">$ wa run _examples/prime</span></span>
<span class="line"><span style="color:#d8dee9ff;">2</span></span>
<span class="line"><span style="color:#d8dee9ff;">3</span></span>
<span class="line"><span style="color:#d8dee9ff;">5</span></span>
<span class="line"><span style="color:#d8dee9ff;">7</span></span>
<span class="line"><span style="color:#d8dee9ff;">11</span></span>
<span class="line"><span style="color:#d8dee9ff;">13</span></span>
<span class="line"><span style="color:#d8dee9ff;">17</span></span>
<span class="line"><span style="color:#d8dee9ff;">19</span></span>
<span class="line"><span style="color:#d8dee9ff;">23</span></span>
<span class="line"><span style="color:#d8dee9ff;">29</span></span>
<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre></div><p>更多例子 <a href="https://gitee.com/wa-lang/wa/tree/master/_examples" target="_blank" rel="noreferrer">_examples</a></p><h2 id="作为脚本执行" tabindex="-1">作为脚本执行 <a class="header-anchor" href="#作为脚本执行" aria-hidden="true">#</a></h2><p>凹语言本身也可以像 Lua 语言被嵌入 Go 宿主语言环境执行：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki" style="background-color:#2e3440ff;"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">(</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">wa-lang.org/wa/api</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">main</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	</span><span style="color:#D8DEE9;">output</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">err</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">:=</span><span style="color:#D8DEE9FF;"> api</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">RunCode</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">hello.wa</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">func main() { println(40+2) }</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Print</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">string</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">output</span><span style="color:#ECEFF4;">),</span><span style="color:#D8DEE9FF;"> err</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div><p>注：作为脚本执行目前只支持本地环境。</p><h2 id="版权" tabindex="-1">版权 <a class="header-anchor" href="#版权" aria-hidden="true">#</a></h2><p>版权 @2019 凹语言™ 作者。保留所有权利。</p>`,30),r=[t];function c(i,E,y,F,D,d){return n(),a("div",null,r)}const f=s(o,[["render",c]]);export{g as __pageData,f as default};
